.TH man 1 "22 October 2016" "1.0" "sshrc man page"
.SH NAME
sshrc \- carry your dotfiles with you
.SH SYNOPSIS
.B sshrc
.nh
[\fIOPTIONS\fR]
[\fISSH_ARGS\fR...]

.SH OPTIONS
.TP
.BI "\-\-archiver=" UTILITY
Use
.I UTILITY
for compression. Default is
.IR bzip2 ;
.I gzip
and
.I xz
are also supported.

.TP
.BI "\-\-arg\-max=" BYTES
Ensure
.B SSHRC_CMD
is less than
.I BYTES
in size. Default is 65536 (64kb). Set to 0 to disable this check.

.TP
.B \-\-arg\-size
Print the compressed size of
.B SSHRC_CMD
in bytes and exit.

.TP
.B \-\-hushlogin
Suppress motd welcome messages. This can also be accomplished by creating a
.I .hushlogin
file in
.IR $SSHHOME/.sshrc.d .

.TP
.B \-\-nobin
Don't copy this sshrc script to the remote host. This may speed up initial ssh connections slightly. It can also be used to reduce the size of the
.BR SSHRC_CMD .

.TP
.B \-\-debug\fR[\fI=LEVEL\fR]
Print out debug info.
.I LEVEL
1 prints the
.BR SSHRC_CMD .
.I LEVEL
2 prints the uncompressed bootstrap script.

.TP
.B \-h, \-\-help
Display a help message and exit.

.SH SSHRC_CMD
This is the remote command that sshrc passes to ssh. It is comprised of the compressed sshrc bootstrap script and the commands needed to decompress and run it. The .sshrc config file and files within .sshrc.d are embedded within the bootstrap script.
.P
If a remote command is passed to sshrc, it will be incorporated into the
.B SSHRC_CMD
and run after starting the shell.
.P
Some shells (both locally and on the remote server) will complain if this command is too large. For this reason, sshrc will refuse to run if the command exceeds 64kb. The threshold for this check can be modified or disabled with
.BR \-\-arg-max .

.SH CONFIGURATION
.TP
.I $SSHHOME
Locally, this location is a place to put all of your
.B sshrc
configuration files. If not set
.B sshrc
will check for config files in the current directory or
.IR $HOME .
On the remote server,
.B sshrc
creates a temporary
.I $SSHHOME
directory and copies its configuration files there.

.TP
.I $SSHHOME/.sshrc
.B sshrc
sources this file after logging in to a remote server. Use it to change the prompt, export variables, or define functions and aliases.

.TP
.I $SSHHOME/.sshrc.d
.B sshrc
will copy anything in this directory to the remote server. You can then tell programs to load their configuration from the
.I $SSHHOME/.sshrc.d
directory by setting the right environment variables.

.TP
.B ALTERNATE SHELL
.B sshrc
uses
.B bash
by default. To use an alternate shell, create a
.I $SSHHOME/.sshrc.d/sh
file that wraps the desired shell. See
.B EXAMPLES
for an example with
.BR zsh .

.SH EXAMPLES
.B $ sshrc \-\-hushlogin user@host

Log into remote server
.B host
as the user
.B user
and suppress any welcome message.

.B $ cat <<'EOF' > $SSHHOME/.sshrc.d/sh
.br
.B #/usr/bin/env zsh
.br
.B echo '
.br
.B for file in .zshenv .zprofile .zlogin; do
.br
.RS 2
.B  [[ -r $HOME/$file ]] && cp {$HOME,$SSHHOME}/$file
.br
.RE
.B done
.br
.B export PATH=$PATH:\\\\$SSHHOME
.br
.B source $SSHHOME/.sshrc
.br
.B ' > $SSHHOME/.zshrc
.br
.B ZDOTDIR=$SSHHOME exec zsh "$@"
.br
.B EOF

Create a wrapper script around 
.BR zsh .
.B sshrc
will use this to start
.B zsh
as the remote shell.

.SH SEE ALSO
\fBssh\fP(1) contains more information about
.IR SSH_ARGS .
