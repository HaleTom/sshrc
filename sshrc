#!/usr/bin/env bash

function ssh_cmd() {
  # Bail if openssl isn't installed on the remote host
  echo "
  if [[ ! \$(command -v openssl) ]]; then
    echo >&2 \"error: sshrc requires openssl to be installed on the server\"
    exit 1
  fi"

  # Copy .sshrc and .sshrc.d; clean up when leaving
  echo "
  export SSHHOME=\$(mktemp -d -t .$(whoami).sshrc.XXXXXXXX)
  export SSHRCCLEANUP=\$SSHHOME
  trap \"rm -rf \$SSHRCCLEANUP; exit\" 0
  echo $'"$(tar cz -h -C "${SSHHOME}" ${files:=$1} | openssl enc -base64)"' \
    | tr -s ' ' $'\n' \
    | openssl enc -base64 -d \
    | tar mxz -C \$SSHHOME"

  # Copy sshrc binary, so we can run sshrc again from the new host
  echo "
  echo $'"$(cat "$0" | openssl enc -base64)"' \
    | tr -s ' ' $'\n' \
    | openssl enc -base64 -d > \$SSHHOME/sshrc
  chmod +x \$SSHHOME/sshrc"

  # Copy bootstrap rcfile
  local bootstrap="
  [[ -r /etc/profile ]] && source /etc/profile
  if [[ -r ~/.bash_profile ]]; then
    source ~/.bash_profile
  elif [[ -r ~/.bash_login ]]; then
    source ~/.bash_login
  elif [[ -r ~/.profile ]]; then
    source ~/.profile
  fi
  export PATH=\$PATH:\$SSHHOME
  source \$SSHHOME/.sshrc"
  echo "
  echo $'"$(echo "${bootstrap}" | openssl enc -base64)"' \
    | tr -s ' ' $'\n' \
    | openssl enc -base64 -d > \$SSHHOME/sshrc.bootstrap"

  # Create a wrapper around bash and use that as the shell
  echo "
  echo $'"$(echo "bash --rcfile \$SSHHOME/sshrc.bootstrap \"\$@\"" | openssl enc -base64)"' \
    | tr -s ' ' $'\n' \
    | openssl enc -base64 -d > \$SSHHOME/sshrcsh
  chmod +x \$SSHHOME/sshrcsh
  SHELL=\$SSHHOME/sshrcsh
  [[ -e /etc/motd ]] && cat /etc/motd
  \$SSHHOME/sshrcsh"
}

function main() {
  [[ $# -lt 1 ]] && return $(ssh)

  if [[ ! $(command -v openssl) ]]; then
    echo >&2 "error: sshrc requires openssl to be installed locally"
    exit 1
  fi

  if [[ -z "${SSHHOME}" ]]; then
    for SSHHOME in $PWD $HOME; do
      [[ -f "${SSHHOME}/.sshrc" ]] && break
    done
  fi

  local files
  if [[ -f "${SSHHOME}/.sshrc" ]]; then
    files="${files} .sshrc"
  else
    echo >&2 "error: could not find .sshrc in current directory or $HOME"
    exit 1
  fi
  [[ -d "${SSHHOME}/.sshrc.d" ]] && files="${files} .sshrc.d"

  local size=$(tar cz -h -C "${SSHHOME}" ${files} | wc -c)
  if [ "${size}" -gt 65536 ]; then
    echo >&2 "
    error: .sshrc.d and .sshrc files must be less than 64kb
    current size: ${size} bytes"
    exit 1
  fi

  ssh -t "$@" "$(ssh_cmd "${files}")"
}

main "$@"
